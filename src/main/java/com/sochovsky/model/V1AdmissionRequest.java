/*
 * k8s.io/api/admission/v1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sochovsky.model;

import java.util.Map;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Data;

/**
 * AdmissionRequest describes the admission.Attributes for the admission
 * request.
 */
@Data
@Schema(description = "AdmissionRequest describes the admission.Attributes for the admission request.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-04-08T23:27:15.525561+02:00[Europe/Vienna]")
public class V1AdmissionRequest {
	@SerializedName("dryRun")
	private Boolean dryRun = null;

	@SerializedName("kind")
	private V1GroupVersionKind kind = null;

	@SerializedName("name")
	private String name = null;

	@SerializedName("namespace")
	private String namespace = null;

	@SerializedName("object")
	private Map<String, Object> object = null;

	@SerializedName("oldObject")
	private Map<String, Object> oldObject = null;

	@SerializedName("operation")
	private String operation = null;

	@SerializedName("options")
	private Map<String, Object> options = null;

	@SerializedName("requestKind")
	private V1GroupVersionKind requestKind = null;

	@SerializedName("requestResource")
	private V1GroupVersionResource requestResource = null;

	@SerializedName("requestSubResource")
	private String requestSubResource = null;

	@SerializedName("resource")
	private V1GroupVersionResource resource = null;

	@SerializedName("subResource")
	private String subResource = null;

	@SerializedName("uid")
	private String uid = null;

	@SerializedName("userInfo")
	private V1UserInfo userInfo = null;

	public V1AdmissionRequest dryRun(Boolean dryRun) {
		this.dryRun = dryRun;
		return this;
	}

	/**
	 * DryRun indicates that modifications will definitely not be persisted for this
	 * request. Defaults to false.
	 * 
	 * @return dryRun
	 **/
	@Schema(description = "DryRun indicates that modifications will definitely not be persisted for this request. Defaults to false.")
	public Boolean isDryRun() {
		return dryRun;
	}

	public void setDryRun(Boolean dryRun) {
		this.dryRun = dryRun;
	}

	public V1AdmissionRequest kind(V1GroupVersionKind kind) {
		this.kind = kind;
		return this;
	}

	/**
	 * Get kind
	 * 
	 * @return kind
	 **/
	@Schema(required = true, description = "")
	public V1GroupVersionKind getKind() {
		return kind;
	}

	public void setKind(V1GroupVersionKind kind) {
		this.kind = kind;
	}

	public V1AdmissionRequest name(String name) {
		this.name = name;
		return this;
	}

	/**
	 * Name is the name of the object as presented in the request. On a CREATE
	 * operation, the client may omit name and rely on the server to generate the
	 * name. If that is the case, this field will contain an empty string.
	 * 
	 * @return name
	 **/
	@Schema(description = "Name is the name of the object as presented in the request.  On a CREATE operation, the client may omit name and rely on the server to generate the name.  If that is the case, this field will contain an empty string.")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public V1AdmissionRequest namespace(String namespace) {
		this.namespace = namespace;
		return this;
	}

	/**
	 * Namespace is the namespace associated with the request (if any).
	 * 
	 * @return namespace
	 **/
	@Schema(description = "Namespace is the namespace associated with the request (if any).")
	public String getNamespace() {
		return namespace;
	}

	public void setNamespace(String namespace) {
		this.namespace = namespace;
	}

	public V1AdmissionRequest object(Map<String, Object> object) {
		this.object = object;
		return this;
	}

	/**
	 * Get object
	 * 
	 * @return object
	 **/
	@Schema(description = "")
	public Map<String, Object> getObject() {
		return object;
	}

	public void setObject(Map<String, Object> object) {
		this.object = object;
	}

	public V1AdmissionRequest oldObject(Map<String, Object> oldObject) {
		this.oldObject = oldObject;
		return this;
	}

	/**
	 * Get oldObject
	 * 
	 * @return oldObject
	 **/
	@Schema(description = "")
	public Map<String, Object> getOldObject() {
		return oldObject;
	}

	public void setOldObject(Map<String, Object> oldObject) {
		this.oldObject = oldObject;
	}

	public V1AdmissionRequest operation(String operation) {
		this.operation = operation;
		return this;
	}

	/**
	 * Operation is the operation being performed. This may be different than the
	 * operation requested. e.g. a patch can result in either a CREATE or UPDATE
	 * Operation.
	 * 
	 * @return operation
	 **/
	@Schema(required = true, description = "Operation is the operation being performed. This may be different than the operation requested. e.g. a patch can result in either a CREATE or UPDATE Operation.")
	public String getOperation() {
		return operation;
	}

	public void setOperation(String operation) {
		this.operation = operation;
	}

	public V1AdmissionRequest options(Map<String, Object> options) {
		this.options = options;
		return this;
	}

	/**
	 * Get options
	 * 
	 * @return options
	 **/
	@Schema(description = "")
	public Map<String, Object> getOptions() {
		return options;
	}

	public void setOptions(Map<String, Object> options) {
		this.options = options;
	}

	public V1AdmissionRequest requestKind(V1GroupVersionKind requestKind) {
		this.requestKind = requestKind;
		return this;
	}

	/**
	 * Get requestKind
	 * 
	 * @return requestKind
	 **/
	@Schema(description = "")
	public V1GroupVersionKind getRequestKind() {
		return requestKind;
	}

	public void setRequestKind(V1GroupVersionKind requestKind) {
		this.requestKind = requestKind;
	}

	public V1AdmissionRequest requestResource(V1GroupVersionResource requestResource) {
		this.requestResource = requestResource;
		return this;
	}

	/**
	 * Get requestResource
	 * 
	 * @return requestResource
	 **/
	@Schema(description = "")
	public V1GroupVersionResource getRequestResource() {
		return requestResource;
	}

	public void setRequestResource(V1GroupVersionResource requestResource) {
		this.requestResource = requestResource;
	}

	public V1AdmissionRequest requestSubResource(String requestSubResource) {
		this.requestSubResource = requestSubResource;
		return this;
	}

	/**
	 * RequestSubResource is the name of the subresource of the original API
	 * request, if any (for example, \&quot;status\&quot; or \&quot;scale\&quot;) If
	 * this is specified and differs from the value in \&quot;subResource\&quot;, an
	 * equivalent match and conversion was performed. See documentation for the
	 * \&quot;matchPolicy\&quot; field in the webhook configuration type.
	 * 
	 * @return requestSubResource
	 **/
	@Schema(description = "RequestSubResource is the name of the subresource of the original API request, if any (for example, \"status\" or \"scale\") If this is specified and differs from the value in \"subResource\", an equivalent match and conversion was performed. See documentation for the \"matchPolicy\" field in the webhook configuration type.")
	public String getRequestSubResource() {
		return requestSubResource;
	}

	public void setRequestSubResource(String requestSubResource) {
		this.requestSubResource = requestSubResource;
	}

	public V1AdmissionRequest resource(V1GroupVersionResource resource) {
		this.resource = resource;
		return this;
	}

	/**
	 * Get resource
	 * 
	 * @return resource
	 **/
	@Schema(required = true, description = "")
	public V1GroupVersionResource getResource() {
		return resource;
	}

	public void setResource(V1GroupVersionResource resource) {
		this.resource = resource;
	}

	public V1AdmissionRequest subResource(String subResource) {
		this.subResource = subResource;
		return this;
	}

	/**
	 * SubResource is the subresource being requested, if any (for example,
	 * \&quot;status\&quot; or \&quot;scale\&quot;)
	 * 
	 * @return subResource
	 **/
	@Schema(description = "SubResource is the subresource being requested, if any (for example, \"status\" or \"scale\")")
	public String getSubResource() {
		return subResource;
	}

	public void setSubResource(String subResource) {
		this.subResource = subResource;
	}

	public V1AdmissionRequest uid(String uid) {
		this.uid = uid;
		return this;
	}

	/**
	 * UID is an identifier for the individual request/response. It allows us to
	 * distinguish instances of requests which are otherwise identical (parallel
	 * requests, requests when earlier requests did not modify etc) The UID is meant
	 * to track the round trip (request/response) between the KAS and the WebHook,
	 * not the user request. It is suitable for correlating log entries between the
	 * webhook and apiserver, for either auditing or debugging.
	 * 
	 * @return uid
	 **/
	@Schema(required = true, description = "UID is an identifier for the individual request/response. It allows us to distinguish instances of requests which are otherwise identical (parallel requests, requests when earlier requests did not modify etc) The UID is meant to track the round trip (request/response) between the KAS and the WebHook, not the user request. It is suitable for correlating log entries between the webhook and apiserver, for either auditing or debugging.")
	public String getUid() {
		return uid;
	}

	public void setUid(String uid) {
		this.uid = uid;
	}

	public V1AdmissionRequest userInfo(V1UserInfo userInfo) {
		this.userInfo = userInfo;
		return this;
	}

	/**
	 * Get userInfo
	 * 
	 * @return userInfo
	 **/
	@Schema(required = true, description = "")
	public V1UserInfo getUserInfo() {
		return userInfo;
	}

	public void setUserInfo(V1UserInfo userInfo) {
		this.userInfo = userInfo;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		V1AdmissionRequest v1AdmissionRequest = (V1AdmissionRequest) o;
		return Objects.equals(this.dryRun, v1AdmissionRequest.dryRun)
				&& Objects.equals(this.kind, v1AdmissionRequest.kind)
				&& Objects.equals(this.name, v1AdmissionRequest.name)
				&& Objects.equals(this.namespace, v1AdmissionRequest.namespace)
				&& Objects.equals(this.object, v1AdmissionRequest.object)
				&& Objects.equals(this.oldObject, v1AdmissionRequest.oldObject)
				&& Objects.equals(this.operation, v1AdmissionRequest.operation)
				&& Objects.equals(this.options, v1AdmissionRequest.options)
				&& Objects.equals(this.requestKind, v1AdmissionRequest.requestKind)
				&& Objects.equals(this.requestResource, v1AdmissionRequest.requestResource)
				&& Objects.equals(this.requestSubResource, v1AdmissionRequest.requestSubResource)
				&& Objects.equals(this.resource, v1AdmissionRequest.resource)
				&& Objects.equals(this.subResource, v1AdmissionRequest.subResource)
				&& Objects.equals(this.uid, v1AdmissionRequest.uid)
				&& Objects.equals(this.userInfo, v1AdmissionRequest.userInfo);
	}

	@Override
	public int hashCode() {
		return Objects.hash(dryRun, kind, name, namespace, object, oldObject, operation, options, requestKind,
				requestResource, requestSubResource, resource, subResource, uid, userInfo);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class V1AdmissionRequest {\n");

		sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
		sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
		sb.append("    object: ").append(toIndentedString(object)).append("\n");
		sb.append("    oldObject: ").append(toIndentedString(oldObject)).append("\n");
		sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
		sb.append("    options: ").append(toIndentedString(options)).append("\n");
		sb.append("    requestKind: ").append(toIndentedString(requestKind)).append("\n");
		sb.append("    requestResource: ").append(toIndentedString(requestResource)).append("\n");
		sb.append("    requestSubResource: ").append(toIndentedString(requestSubResource)).append("\n");
		sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
		sb.append("    subResource: ").append(toIndentedString(subResource)).append("\n");
		sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
		sb.append("    userInfo: ").append(toIndentedString(userInfo)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
